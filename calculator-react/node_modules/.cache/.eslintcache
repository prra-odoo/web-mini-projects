[{"E:\\web-development\\calculator-react\\src\\index.js":"1","E:\\web-development\\calculator-react\\src\\reportWebVitals.js":"2","E:\\web-development\\calculator-react\\src\\App.js":"3"},{"size":500,"mtime":1644680529801,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1644680529886,"results":"6","hashOfConfig":"5"},{"size":2531,"mtime":1644685492173,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ndv157",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"E:\\web-development\\calculator-react\\src\\index.js",[],[],"E:\\web-development\\calculator-react\\src\\reportWebVitals.js",[],[],"E:\\web-development\\calculator-react\\src\\App.js",["18","19","20","21","22","23","24","25","26","27","28","29","30","31","32"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { last } from 'lodash';\n\nfunction App() {\n  const [result, setResult] = useState(\"\");\n  const [expression, setExpression] = useState(\"\");\n\n  useEffect(() => {\n    setResult(expression);\n  }, [expression]);\n\n  let valid = (op) => {\n    let lastChar = expression.charAt(expression.length-1);\n    if(lastChar=='' || lastChar=='%' || lastChar==\"/\" || lastChar==\"*\" || lastChar==\"+\" || lastChar==\"-\" ) {\n      return \"\";\n    }\n    return op;\n  };\n\n  let trim=(exp) => {\n    let lastChar = exp.charAt(exp.length-1);\n    if(lastChar=='' || lastChar=='%' || lastChar==\"/\" || lastChar==\"*\" || lastChar==\"+\" || lastChar==\"-\" ) {\n      return exp.slice(0,-1);\n    }\n    return exp;\n  }\n  return (\n    <div className=\"App\">\n      <h1 id=\"result\">{result}</h1>\n      <button onClick={() => { setExpression(\"\") }}>AC</button>\n      <button onClick={() => { setExpression(expression.slice(0, -1)) }}>&larr;</button>\n      <button className=\"operator\" onClick={() => {setExpression(expression + valid('%'))}}>%</button>\n      <button className=\"operator\" onClick={() => {setExpression(expression + valid('/'))}}>/</button>\n      <button onClick={() => { setExpression(expression + 7) }}>7</button>\n      <button onClick={() => { setExpression(expression + 8) }}>8</button>\n      <button onClick={() => { setExpression(expression + 9) }}>9</button>\n      <button className=\"operator\" onClick={() => {setExpression(expression + valid('*'))}}>*</button>\n      <button onClick={() => { setExpression(expression + 4) }}>4</button>\n      <button onClick={() => { setExpression(expression + 5) }}>5</button>\n      <button onClick={() => { setExpression(expression + 6) }}>6</button>\n      <button className=\"operator\" onClick={() => {setExpression(expression + valid('-'))}}>-</button>\n      <button onClick={() => { setExpression(expression + 1) }}>1</button>\n      <button onClick={() => { setExpression(expression + 2) }}>2</button>\n      <button onClick={() => { setExpression(expression + 3) }}>3</button>\n      <button className=\"operator\" onClick={() => {setExpression(expression + valid('+'))}}>+</button>\n      <button style={{ gridColumn: \"span 2\" }} onClick={() => { setExpression(expression + 0) }}>0</button>\n      <button onClick={() => { setExpression(expression + \".\") }}>.</button>\n      <button className=\"operator\" onClick={() => {setExpression(eval(trim(expression)).toString())}}>=</button>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":4,"column":10,"nodeType":"35","messageId":"36","endLine":4,"endColumn":14},{"ruleId":"38","severity":1,"message":"39","line":16,"column":16,"nodeType":"40","messageId":"41","endLine":16,"endColumn":18},{"ruleId":"38","severity":1,"message":"39","line":16,"column":32,"nodeType":"40","messageId":"41","endLine":16,"endColumn":34},{"ruleId":"38","severity":1,"message":"39","line":16,"column":49,"nodeType":"40","messageId":"41","endLine":16,"endColumn":51},{"ruleId":"38","severity":1,"message":"39","line":16,"column":66,"nodeType":"40","messageId":"41","endLine":16,"endColumn":68},{"ruleId":"38","severity":1,"message":"39","line":16,"column":83,"nodeType":"40","messageId":"41","endLine":16,"endColumn":85},{"ruleId":"38","severity":1,"message":"39","line":16,"column":100,"nodeType":"40","messageId":"41","endLine":16,"endColumn":102},{"ruleId":"38","severity":1,"message":"39","line":24,"column":16,"nodeType":"40","messageId":"41","endLine":24,"endColumn":18},{"ruleId":"38","severity":1,"message":"39","line":24,"column":32,"nodeType":"40","messageId":"41","endLine":24,"endColumn":34},{"ruleId":"38","severity":1,"message":"39","line":24,"column":49,"nodeType":"40","messageId":"41","endLine":24,"endColumn":51},{"ruleId":"38","severity":1,"message":"39","line":24,"column":66,"nodeType":"40","messageId":"41","endLine":24,"endColumn":68},{"ruleId":"38","severity":1,"message":"39","line":24,"column":83,"nodeType":"40","messageId":"41","endLine":24,"endColumn":85},{"ruleId":"38","severity":1,"message":"39","line":24,"column":100,"nodeType":"40","messageId":"41","endLine":24,"endColumn":102},{"ruleId":"42","severity":1,"message":"43","line":50,"column":66,"nodeType":"44","messageId":"41","endLine":50,"endColumn":70},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'last' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-eval","eval can be harmful.","CallExpression"]